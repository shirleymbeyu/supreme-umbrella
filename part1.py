# -*- coding: utf-8 -*-
"""Part1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16GnJsQtH_LeGVP1JwXXlsGyOXjtD8tcc

# Set up
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import warnings
np.random.seed(123)
warnings.filterwarnings('ignore')
# %matplotlib inline

client_ts = pd.read_csv('client_test.csv')
client_ts.head()

client_ts.shape

client_tr = pd.read_csv('client_train.csv')
client_tr.head()

client_tr.shape

inv_ts = pd.read_csv('invoice_test.csv')
inv_ts.head()

inv_ts.shape

inv_tr = pd.read_csv('invoice_train.csv')
inv_tr.head()

inv_tr.shape

ss = pd.read_csv('SampleSubmission.csv')
ss.head()

ss.shape

"""# Data Understanding

## Train
"""

client_tr.info()

inv_tr.info()

#viewing the row with missing values since there seems to be one:
null_data = inv_tr[inv_tr.isnull().any(axis=1)]
null_data

#unique elements in our data:
cols = inv_tr.columns.to_list()

for col in cols:
  print('COLUMN:', col)
  print('Number of unique variables:', inv_tr[col].nunique())
  print(inv_tr[col].unique())
  print()

#unique elements in our data:
cols = client_tr.columns.to_list()

for col in cols:
  print('COLUMN:', col)
  print('Number of unique variables:', client_tr[col].nunique())
  print(client_tr[col].unique())
  print()

#checking for duplicates
client_tr.duplicated().any()

#checking for duplicates
inv_tr.duplicated().any()

"""## Test"""

client_ts.info()

inv_ts.info()

inv_ts.isna().sum()

#unique elements in our data:
cols = inv_ts.columns.to_list()

for col in cols:
  print('COLUMN:', col)
  print('Number of unique variables:', inv_ts[col].nunique())
  print(inv_ts[col].unique())
  print()

#unique elements in our data:
cols = client_ts.columns.to_list()

for col in cols:
  print('COLUMN:', col)
  print('Number of unique variables:', client_ts[col].nunique())
  print(client_ts[col].unique())
  print()

#checking for duplicates
client_tr.duplicated().any()

#checking for duplicates
inv_tr.duplicated().any()

"""# Data Cleaning"""

#drop the row with missing values in inv_tr
inv_tr = inv_tr.dropna()

inv_tr.shape

#dropping columns in invoice
inv_tr = inv_tr.drop(['invoice_date','counter_number',	'counter_code','consommation_level_1', 'consommation_level_2', 'consommation_level_3',	'consommation_level_4'], axis =1)
inv_ts = inv_ts.drop(['invoice_date', 'counter_number',	'counter_code','consommation_level_1', 'consommation_level_2', 'consommation_level_3',	'consommation_level_4'], axis =1)

inv_tr[:2]

inv_ts[:2]

#dropping columns in client data
client_tr = client_tr.drop(['creation_date'], axis = 1)
client_ts = client_ts.drop(['creation_date'], axis = 1)

client_tr[:2]

client_ts[:2]

#making our train data
train = pd.merge(client_tr, inv_tr, left_on='client_id', right_on ='client_id')
train

#confirming the merge did not create missing values
train.isna().sum()

#making our train data
test = pd.merge(client_ts, inv_ts, left_on='client_id', right_on ='client_id')
test

test.isna().sum()

train.to_csv('defpred_tr.csv', index= False)

test.to_csv('defpred_ts.csv', index= False)